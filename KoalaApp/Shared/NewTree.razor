@using Data.ValidationModels
@using DataAccessLibrary
@using Data
@inject AccountHandler AccountHandler
@inject ProjectsHandler ProjectsHandler   

@if (NewTreeHasBeenCreated)
{
    <HxAlert Color="ThemeColor.Success">
        The new tree has been <strong>created successfuly!</strong>
    </HxAlert>
}

@if (ErrorOccured)
{
    <HxAlert Color="ThemeColor.Danger">
        An <strong>error has occured</strong>, please refresh the page or try again later
    </HxAlert>
}

<h5>New Tree</h5>

<EditForm Model="@NewTreeModel" OnValidSubmit="@CreateNewTree" class="form-inline">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <row>
        <div class="col-md-3 d-inline-block">
            <HxInputText @bind-Value="NewTreeModel.Name" Placeholder="Name" />
        </div>
        
        <KoSubmit Text="Create" />
    </row>
</EditForm>

@code {
    [Parameter]
    public object Parent { get; set; }

    private NewTreeModel NewTreeModel { get; set; } = new NewTreeModel();

    private bool NewTreeHasBeenCreated { get; set; } = false;
    private bool ErrorOccured { get; set; } = false;

    private void CreateNewTree()
    {
        if (ProjectsHandler.InsertProject(AccountHandler.User.Id, NewTreeModel.Name))
        {
            NewTreeHasBeenCreated = true;

            if (Parent is Pages.Trees)
            {
                Pages.Trees trees = (Pages.Trees)Parent;
                trees.Projects.Add(new Project()
                {
                    Name = NewTreeModel.Name,
                    DateCreated = DateTime.Now,
                    LastOpened = DateTime.Now
                });
                trees.Update();
            }

        }
        else
        {
            ErrorOccured = true;
        }
    }
}
