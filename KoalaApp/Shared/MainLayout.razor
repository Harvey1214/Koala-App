@inherits LayoutComponentBase

@using Data

@inject WindowDimensions WindowDimensions

<div class="page">
    @if (navMenuHidden == false)
    {
        <div class="sidebar bg-info">
            <NavMenu />
        </div>
        <KoButton OnClick="ToggleNavMenuHidden" CssClass="hideSidebarBtn"><HxIcon Icon="@BootstrapIcon.ArrowLeft" /></KoButton>
    }
    else
    {
        <KoButton OnClick="ToggleNavMenuHidden" CssClass="hideSidebarBtn"><HxIcon Icon="@BootstrapIcon.ArrowRight" /></KoButton>
    }

    <div class="main">
        <div class="content px-4">
            @Body
        </div>
    </div>
</div>

@code {
    private bool navMenuHidden = false;

    private void ToggleNavMenuHidden()
    {
        navMenuHidden = !navMenuHidden;
    }

    protected override void OnInitialized()
    {
        WindowDimensions.MainLayout = this;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender) await AdjustUIBasedOnWindowDimensions();
    }

    public async Task AdjustUIBasedOnWindowDimensions()
    {
        WindowDimensions.BrowserDimension = await WindowDimensions.GetDimensions();

        if (WindowDimensions.BrowserDimension.Width > 1000)
        {
            WindowDimensions.Mobile = false;
        }
        else
        {
            WindowDimensions.Mobile = true;
        }

        await InvokeAsync(StateHasChanged);
    }
}