@page "/signup"

@using Data

@inject DataAccessLibrary.UsersHandler UsersHandler 
@inject NavigationManager NavigationManager 

@if (SomethingWentWrong)
{
    <HxAlert Color="ThemeColor.Danger">
        Something <strong>went wrong</strong>, please <a class="alert-link" href="/signup">try again</a> in a few minutes
    </HxAlert>
}

@if (AccountWithThisEmailExists)
{
    <HxAlert Color="ThemeColor.Danger">
        Unfortunately an account with this email <strong>already exists</strong>, please use a different email address
    </HxAlert>
}

<h3>Sign Up</h3>

<EditForm Model="@SignupModel" OnValidSubmit="@ValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <HxInputText @bind-Value="SignupModel.Email" Placeholder="Email" />
    <HxInputText @bind-Value="SignupModel.Password" Placeholder="Password" Type="InputType.Password" />
    <HxInputText @bind-Value="SignupModel.ControlPassword" Placeholder="Repeat Password" Type="InputType.Password" CssClass="mb-0" />

    <HxSubmit Text="Submit" />
</EditForm>

@code {
    private SignupModel SignupModel { get; set; } = new SignupModel();

    private bool SomethingWentWrong { get; set; } = false;
    private bool AccountWithThisEmailExists { get; set; } = false;

    private void ValidSubmit()
    {
        // checking if there's already an account with this email
        var usersFound = UsersHandler.GetUsers(SignupModel.Email);
        if (usersFound != null)
        if (usersFound.Count > 0)
        {
            AccountWithThisEmailExists = true;
            return;
        }

        bool success = UsersHandler.InsertUser(SignupModel.Email, SignupModel.Password);

        if (success)
        {
            NavigationManager.NavigateTo("/login?signup=true");
        }
        else
        {
            SomethingWentWrong = true;
        }
    }
}
